name: Docker Build and Test Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: selenium-lambda:latest
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Run Docker container
      run: |
        docker run -d --name selenium-container -p 9000:8080 selenium-lambda:latest
        echo "Waiting for the container to launch..."
        sleep 10

    - name: Execute tests
      run: |
        RESPONSE=$(curl --request POST \
          --url http://localhost:9000/2015-03-31/functions/function/invocations \
          --header 'Content-Type: application/json' \
          --data '{"headless_mode": false, "needs_download_file": false, "clean_init": false, "script_name": null}')
        echo "Test response: $RESPONSE"
        if [[ "$RESPONSE" != *'"status": "ok"'* ]]; then
          echo "Test failed"
          exit 1
        fi

    - name: Stop and remove the Docker container
      if: always()
      run: |
        docker stop selenium-container
        docker rm selenium-container
